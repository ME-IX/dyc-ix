# 定义IX前缀过滤器
function is_ix_route() {
    return net ~ IX_PREFIX;
}

# IX客户路由导入过滤器 - 添加ROA验证和社区标记
function ix_import() {
    # 检查是否来自BOGON ASN
    if bgp_path.last ~ BOGON_ASNS then return false;
    
    # 执行ROA验证
    if !check_roa_v6() then return false;
    if !check_ix_member_roa_v6() then return false;

    if source = RTS_BGP then {
        # 来自IX成员的路由，默认可以向其他IX成员和上游分享
        bgp_large_community.add(COMM_IX_MEMBER_ROUTE);
        bgp_large_community.add(COMM_EXPORT_IX);
        bgp_large_community.add(COMM_EXPORT_UPSTREAM);
    }

    # 处理特殊社区标记，转换成系统内部社区
    if bgp_large_community ~ [(OWN_AS, 5, 1)] then {
        # 仅发给RS，删除上游导出权限
        bgp_large_community.delete(COMM_EXPORT_UPSTREAM);
    }
    
    if bgp_large_community ~ [(OWN_AS, 5, 2)] then {
        # 仅在IX内部分发，删除上游导出权限
        bgp_large_community.delete(COMM_EXPORT_UPSTREAM);
        bgp_large_community.add(COMM_NO_EXPORT_UPSTREAM);
    }
    
    if bgp_large_community ~ [(OWN_AS, 5, 3)] then {
        # 仅发给上游，删除IX内部分发权限
        bgp_large_community.delete(COMM_EXPORT_IX);
        bgp_large_community.add(COMM_NO_EXPORT_IX);
    }
    
    if bgp_large_community ~ [(OWN_AS, 5, 4)] then {
        # 不要重分发此路由
        bgp_large_community.delete(COMM_EXPORT_IX);
        bgp_large_community.delete(COMM_EXPORT_UPSTREAM);
        bgp_large_community.add(COMM_NO_EXPORT_IX);
        bgp_large_community.add(COMM_NO_EXPORT_UPSTREAM);
    }
    
    if bgp_large_community ~ [(OWN_AS, 5, 5)] then {
        # 标记为黑洞路由
        bgp_large_community.add(COMM_BLACKHOLE);
    }

    # 通过所有检查
    return true;
}

# 定义IX导出过滤器 - 基于大型社区的版本
function ix_export() {
    # 明确导出IX网络前缀
    if net ~ IX_PREFIX then {
        bgp_large_community.add(COMM_IX_ROUTE);
        return true;
    }

    # 检查黑洞社区标记 - 直接不导出
    if bgp_large_community ~ [COMM_BLACKHOLE] then return false;
    
    # 检查导出策略社区标记
    if bgp_large_community ~ [COMM_NO_EXPORT_IX] then return false;
    
    # 检查特定AS过滤 - 不导出到特定AS
    # 格式: (OWN_AS, 6, target_as)
    if (OWN_AS, 6, bgp_path.first) ~ bgp_large_community then return false;
    
    # 允许导出的社区
    if bgp_large_community ~ [COMM_EXPORT_IX, COMM_EXPORT_ALL] then return true;

    # 如果路由有IX成员社区标记，则向其他客户公告
    if bgp_large_community ~ [COMM_IX_MEMBER_ROUTE] then return true;

    # 如果是IX内部路由则发送
    if source = RTS_DEVICE && is_ix_route() then return true;

    # 默认不发送
    return false;
}

# 定义上游导出过滤器 - 基于大型社区
function upstream_export() {
    # 检查社区标记
    if bgp_large_community ~ [COMM_NO_EXPORT_UPSTREAM] then return false;
    if bgp_large_community ~ [COMM_BLACKHOLE] then return false;

    # 导出IX网络前缀
    if net ~ IX_EXPORT_PREFIXES then {
        bgp_large_community.add(COMM_IX_ROUTE); 
        bgp_large_community.add(COMM_EXPORT_UPSTREAM);
        return true;
    }

    # 导出来自IX成员的路由，基于社区标记
    if bgp_large_community ~ [COMM_EXPORT_UPSTREAM, COMM_EXPORT_ALL] then {
        return true;
    }

    # 基于社区标记识别IX成员路由
    if bgp_large_community ~ [COMM_IX_MEMBER_ROUTE] then {
        return true;
    }

    return false;
}

function dn42_routes_export() {
    
    if bgp_large_community ~ [COMM_DN42_ROUTE] then {
        return false;
    }
        return true;
} 